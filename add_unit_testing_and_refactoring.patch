Subject: [PATCH] add unit testing and refactoring
---
Index: src/C04_declaration_expression/P_44/avrage_notes.js
===================================================================
diff --git a/src/C04_declaration_expression/P_44/avrage_notes.js b/src/C04_declaration_expression/P_44/avrage_notes.js
deleted file mode 100644
--- a/src/C04_declaration_expression/P_44/avrage_notes.js	(revision 47185142be0d2c0e0d3204431c6d837a72777263)
+++ /dev/null	(revision 47185142be0d2c0e0d3204431c6d837a72777263)
@@ -1,25 +0,0 @@
-// Write a C program to calculate the average mathematics marks of some students. Input 0 (excluding to calculate the average) or a negative value to terminate the input process.
-// Test Data :
-// Input Mathematics marks (0 to terminate): 10
-// 15
-// 20
-// 25
-// 0
-// Expected Output:
-// Average marks in Mathematics: 17.50
-
-const calculateAvrage = () => {
-  const marks = [10, 15, 20, 25]
-  let sum = 0
-  let average = 0
-
-  for (let i = 0; i < marks.length; i++) {
-    sum += marks[i]
-  }
-
-  average = sum / marks.length
-
-  console.log(`Average marks in Mathematics: ${average.toFixed(2)}`)
-}
-
-calculateAvrage()
Index: src/C04_declaration_expression/P_44/average_notes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/C04_declaration_expression/P_44/average_notes.js b/src/C04_declaration_expression/P_44/average_notes.js
new file mode 100644
--- /dev/null	(date 1701613041087)
+++ b/src/C04_declaration_expression/P_44/average_notes.js	(date 1701613041087)
@@ -0,0 +1,23 @@
+// Write a C program to calculate the average mathematics marks of some students. Input 0 (excluding to calculate the average) or a negative value to terminate the input process.
+// Test Data :
+// Input Mathematics marks (0 to terminate): 10
+// 15
+// 20
+// 25
+// 0
+// Expected Output:
+// Average marks in Mathematics: 17.50
+
+
+function calculateAverage(marks) {
+    let average = 0;
+    if (marks.length !== 0) {
+        let sum = 0;
+        for (let i = 0; i < marks.length; i++) {
+            sum += marks[i]
+        }
+        average = sum / marks.length;
+    }
+    return average;
+}
+
Index: src/C04_declaration_expression/P_36/check_password.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/C04_declaration_expression/P_36/check_password.js b/src/C04_declaration_expression/P_36/check_password.js
--- a/src/C04_declaration_expression/P_36/check_password.js	(revision 47185142be0d2c0e0d3204431c6d837a72777263)
+++ b/src/C04_declaration_expression/P_36/check_password.js	(date 1701611714014)
@@ -4,15 +4,37 @@
 // Expected Output:
 // Correct password
 
+//input data
+//varianta 1
+let password = "1234";
+
+//varianta 2
+//let password = document.getElementById('textbox_id').value
 
-const password = 1234;
+//varianta 3
+//let password;//API call
 
-const checkpassword = (userInput) =>{
-    if(userInput === password){
-        return console.log('Correct password')
+
+
+//algoritm - aplica o logica asupra datelor de input si returneaza un output
+function isPasswordCorrect(userInput, password) {
+    let result;
+    if (userInput === password) {
+        result = 'Correct password';
     } else {
-        console.log('Incorrect password')
+        result = 'Incorrect password';
     }
+    return result;
 }
 
-checkpassword(1234)
\ No newline at end of file
+
+function checkPassword(){
+    //input data
+    let userInput = document.getElementById('password').value;
+
+    //algorithm
+    let passwordCorrect = isPasswordCorrect(userInput, password);
+
+    //do something with output data
+    document.getElementById('message').textContent  = passwordCorrect;
+}
Index: SpecRunner.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SpecRunner.html b/SpecRunner.html
--- a/SpecRunner.html	(revision 47185142be0d2c0e0d3204431c6d837a72777263)
+++ b/SpecRunner.html	(date 1701612708818)
@@ -17,9 +17,13 @@
   <!-- include source files here... -->
   <!-- <script src="src/Palindrom.js"></script> -->
   <script src="src/print_unique_elements.js"></script>
+  <script src="src/C04_declaration_expression/P_36/check_password.js"></script>
+  <script src="src/C04_declaration_expression/P_44/average_notes.js"></script>
   <!-- include spec files here... -->
   <!-- <script src="spec/PalindromSpec.js"></script> -->
     <script src="spec/print_unique_elementsSpec.js"></script>
+  <script src="spec/C04_declaration_expression/P_36/check_password_spec.js"></script>
+  <script src="spec/C04_declaration_expression/P_44/average_notes.js"></script>
 
 </head>
 
Index: spec/C04_declaration_expression/P_44/average_notes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/spec/C04_declaration_expression/P_44/average_notes.js b/spec/C04_declaration_expression/P_44/average_notes.js
new file mode 100644
--- /dev/null	(date 1701613287499)
+++ b/spec/C04_declaration_expression/P_44/average_notes.js	(date 1701613287499)
@@ -0,0 +1,24 @@
+describe('average notes', function () {
+    it('no notes should average to 0', function () {
+        //input
+        let marks = [];
+
+        //algoritm call
+        let result = calculateAverage(marks);
+
+        //use output
+        expect(result).toBe(0)
+    })
+
+    it('one note should average to itself', function () {
+        //input
+        let marks = ["5"];
+
+        //algoritm call
+        let result = calculateAverage(marks);
+
+        //use output
+        expect(result).toBe(5)
+    })
+
+})
\ No newline at end of file
Index: spec/C04_declaration_expression/P_36/check_password_spec.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/spec/C04_declaration_expression/P_36/check_password_spec.js b/spec/C04_declaration_expression/P_36/check_password_spec.js
new file mode 100644
--- /dev/null	(date 1701611674993)
+++ b/spec/C04_declaration_expression/P_36/check_password_spec.js	(date 1701611674993)
@@ -0,0 +1,24 @@
+describe('check_password', function () {
+    it('Password is incorect', function () {
+        //input
+        let userInput = "1111"
+        let password = "2222"
+
+        //algoritm call
+        let result = isPasswordCorrect(userInput, password);
+
+        //use output
+        expect(result).toBe('Incorrect password')
+    })
+
+    it('Password is correct', function () {
+        let userInput = "1111"
+        let password = "1111"
+
+        let result = isPasswordCorrect(userInput, password);
+
+        expect(result).toBe('Correct password')
+    })
+
+
+})
\ No newline at end of file
